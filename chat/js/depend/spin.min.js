// 作者elandTong,没有图像,依赖jQuery,高度可定制,使用css动画,模块独立
// 更新时间:2018/11/23 02:45
function Spinner(opts) {
    var obj = null;
    var optsObj = opts;
    var defOpts = {
        color: "#FFFFFF", // 花瓣颜色
        petalRadius: 5, // 花瓣半径
        internalRadius: 14, // 内径
        petalSum: 10, // 花瓣数量
    };
    this.spin = spin;
    this.stop = stop;
    function spin(target) {
        stop();
        if (target == null) { return; }
        var color;
        var petalRadius;
        var internalRadius;
        var petalSum;
        if (optsObj != null) {
            color = optsObj["color"];
            if (color == null) { colro = "#FFFFFF"; }
            petalRadius = optsObj["petalRadius"];
            if (petalRadius == null || isNaN(petalRadius)) { petalRadius = 5; }
            internalRadius = optsObj["internalRadius"];
            if (internalRadius == null || isNaN(internalRadius)) { internalRadius = 14; }
            petalSum = optsObj["petalSum"];
            if (petalSum == null || isNaN(petalSum)) { petalSum = 10; }
        } else {
            color = defOpts["color"];
            petalRadius = defOpts["petalRadius"];
            internalRadius = defOpts["internalRadius"];
            petalSum = defOpts["petalSum"];
        }
        var id = $(target).attr("id"); console.log("spin target id:" + id);
        var root = "<div id=\"" + id + "_spin_root\">[content]</div>";
        var run = "<div class=\"lds-spinner\">[content]</div>";
        var viewPetal = "<div></div>";
        var viewPetals = "";
        for (var i = 0; i < petalSum; i++) {
            viewPetals += viewPetal;
        }
        run = run.replace("[content]", viewPetals);
        root = root.replace("[content]", run);
        $(target).html(root);
        // 设置样式
        obj = $("#" + id + "_spin_root");
        obj.css({
            "display": "flex",
            "justify-content": "center",
            "align-items": "center",
            "width": "100%",
            "height": "auto",
            "box-sizing": "border-box"
        });
        var rW = (petalRadius * 2 + internalRadius) * 2;
        var rH = (petalRadius * 2 + internalRadius) * 2;
        var pW = petalRadius * 2;
        var pH = petalRadius * 2;
        var pTop = (rH - pH) / 2;
        var xOffset = (rW / 2);
        var yOffset = (rH / 2) - pTop;
        var originTran = xOffset + "px " + yOffset + "px";
        console.log("originTran:" + originTran);
        console.log("rW:" + rW + ",rH:" + rH + ",pW:" + pW + ",pH:" + pH + ",pTop:" + pTop + ",xOffset:" + xOffset + ",yOffset:" + yOffset);
        $(".lds-spinner").css({
            "position": "relative",
            "width": rW + "px",
            "height": rH + "px"
        });
        $(".lds-spinner div").css({
            "left": "0px",
            "top": pTop + "px",
            "position": "absolute",
            "width": pW + "px",
            "height": pH + "px",
            "border-radius": "50%",
            "background": color,
            "transform-origin": originTran,
            "-webkit-transform-origin": originTran
        });
        var rotateIncrement = 360 / petalSum;
        console.log("spin rotateIncrement:" + rotateIncrement);
        var timeIncrement = 1 / petalSum;
        console.log("spin timeIncrement:" + timeIncrement);
        for (var i = 0; i < petalSum; i++) {
            var index = i + 1;
            var deg = (rotateIncrement * index) - rotateIncrement;
            var time = (timeIncrement * index) - 1; time = time.toFixed(2);
            console.log("deg:" + deg + ",deg time:" + time);
            $(".lds-spinner div:nth-child(" + index + ")").css({
                "transform": "rotate(" + deg + "deg)",
                "-webkit-transform": "rotate(" + deg + "deg)",
                "animation": "lds-spinner linear 1s infinite",
                "-webkit-animation": "lds-spinner linear 1s infinite",
                "animation-delay": time + "s",
                "-webkit-animation-delay": time + "s"
            });
        }
    }
    function stop() {
        if (obj != null) {
            obj.remove();
            obj = null;
            console.log("spinLoading stop");
        }
    }
}
